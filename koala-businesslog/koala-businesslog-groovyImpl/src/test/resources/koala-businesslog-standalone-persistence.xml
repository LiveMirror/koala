<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- Instructs Spring to perfrom declarative transaction managemenet on 
		annotated classes -->
	<tx:annotation-driven transaction-manager="transactionManager_businessLog" />
	
	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager_businessLog" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory_businessLog" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
		and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory_businessLog" class="org.openkoala.koala.util.KoalaEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="businessLog" />
		<property name="packagesToScan">
			<list>
				<value>org.openkoala.businesslog.model</value>
			</list>
		</property>

		<property name="scanMappingResourceDir" value="mappings" />
		<property name="dataSource" ref="dataSource_businessLog" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${log.db.Type}"></property>
				<property name="showSql" value="${log.hibernate.show_sql}"></property>
				<property name="generateDdl" value="${db.generateDdl}"></property>
				<property name="databasePlatform" value="${log.db.jdbc.dialect}"></property>
			</bean>
		</property>
	</bean>
	
	<bean id="repository_businessLog" class="org.dayatang.persistence.jpa.EntityRepositoryJpa">
		<constructor-arg name="entityManagerFactory" ref="entityManagerFactory_businessLog" />
	</bean>

	<bean id="queryChannel_businessLog" class="org.dayatang.querychannel.impl.QueryChannelServiceImpl">
		<constructor-arg name="repository" ref="repository_businessLog" />
	</bean>
	
	

	<bean id="dataSource_businessLog" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${log.db.jdbc.driver}" />
		<property name="driverUrl" value="${log.db.jdbc.connection.url}" />
		<property name="user" value="${log.db.jdbc.username}" />
		<property name="password" value="${log.db.jdbc.password}" />
		<property name="prototypeCount" value="5" />
		<property name="maximumConnectionCount" value="${log.maximumConnectionCount}" />
		<property name="minimumConnectionCount" value="${log.minimumConnectionCount}" />
		<property name="houseKeepingTestSql" value="select 1" />
		<property name="testBeforeUse" value="true" />
		<property name="alias" value="businessLog" />
	</bean>
</beans>