<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">


	<tx:annotation-driven />

	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="km_transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
		and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory" class="org.openkoala.koala.util.KoalaEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="default" />
		<property name="packagesToScan">
			<list>
				<value>org.openkoala.koala.*</value>
			</list>
		</property>

		<property name="scanMappingResourceDir" value="mappings,securitymappings" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${db.Type}"></property>
				<property name="showSql" value="${hibernate.show_sql}"></property>
				<property name="generateDdl" value="${generateDdl}"></property>
				<property name="databasePlatform" value="${db.jdbc.dialect}"></property>
			</bean>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false" p:driverClassName="${db.jdbc.driver}"
		p:url="${db.jdbc.connection.url}" p:username="${db.jdbc.username}"
		p:password="${db.jdbc.password}" p:initialSize="1" p:maxActive="3"
		p:maxIdle="3" p:maxWait="1000" p:poolPreparedStatements="true"
		p:defaultAutoCommit="false" p:removeAbandoned="true"
		p:removeAbandonedTimeout="60">
	</bean>

	<bean id="km_repository" class="org.dayatang.persistence.jpa.EntityRepositoryJpa">
		<constructor-arg name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="km_queryChannel" class="org.dayatang.querychannel.impl.QueryChannelServiceImpl">
		<constructor-arg name="repository" ref="km_repository" />
	</bean>

	<bean class="org.springframework.jdbc.core.JdbcTemplate" id="km_jdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="km_transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="timeout" value="300" />
		<property name="transactionManager" ref="km_transactionManager" />
	</bean>
	
</beans>