#set($package = ${entity.className.substring(0, ${entity.className.lastIndexOf(".")})})
package ${applicationClass.packageName};
#set($domainClass = $applicationClass.entityModel.name)
#set($variableName = ${domainClass.substring(0, 1).toLowerCase()} + ${domainClass.substring(1)})
#set($currntVO = ${domainClass.concat("DTO")})
#set($currntVOVariable = ${currntVO.substring(0, 1).toLowerCase()} + ${currntVO.substring(1)})
#set($joinClause = "")

import java.util.List;
import java.util.Set;
import javax.inject.Named;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.annotation.Propagation;
import ${applicationClass.packageName.replaceAll("impl","")}${applicationClass.name.replaceAll("Impl","")};
import ${entity.className};

@Named
public class ${applicationClass.name} implements ${applicationClass.name.replaceAll("Impl","")} {

	public ${domainClass} get${domainClass}(${applicationClass.entityModel.singleIDFieldModel.simpleType} ${applicationClass.entityModel.singleIDFieldModel.name}) {
		return ${domainClass}.get(${domainClass}.class, ${applicationClass.entityModel.singleIDFieldModel.name});
	}
	
	public void creat${domainClass}(${domainClass} ${variableName}) {
		${variableName}.creat();
	}
	
	public void update${domainClass}(${domainClass} ${variableName}) {
		${variableName} .save();
	}
	
	public void remove${domainClass}(${domainClass} ${variableName}) {
		if(${variableName} != null){
			${variableName}.remove();
		}
	}
	
	public void remove${domainClass}s(Set<${domainClass}> ${variableName}s) {
		for (${domainClass} ${variableName} : ${variableName}s) {
			${variableName}.remove();
		}
	}
	
	public List<${domainClass}> findAll${domainClass}() {
		return ${domainClass}.findAll(${domainClass}.class);
	}
	
}
