package org.openkoala.sample.process;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.drools.runtime.process.WorkItem;
import org.drools.runtime.process.WorkItemHandler;
import org.drools.runtime.process.WorkItemManager;

public class JbpmWorkItemHandler implements WorkItemHandler {

	private List<WorkItem> workItems = new ArrayList<WorkItem>();

	private WorkItemManager workItemManager;
	
    public void executeWorkItem(WorkItem workItem, WorkItemManager workItemManager) {
        this.workItemManager = workItemManager;
        this.workItems.add(workItem);
        System.out.println("Map of Parameters = " + workItem.getParameters());
    }

    public void abortWorkItem(WorkItem workItem, WorkItemManager workItemManager) {
    	this.workItemManager.abortWorkItem(workItem.getId());
    }

    public void completeWorkItem(Map<String, Object> parameters) {
    	WorkItem workItem = getWorkItem();
        this.workItemManager.completeWorkItem(workItem.getId(), parameters);
        System.out.println("执行test workitem"+workItem.getId()+"======"+workItem.getParameters().toString());
    }
    public void completeWorkItem(WorkItem workItem,Map<String, Object> parameters) {
        this.workItemManager.completeWorkItem(workItem.getId(), parameters);
        System.out.println("执行test workitem"+workItem.getId()+"======"+workItem.getParameters().toString());
    }
	public WorkItem getWorkItem() {
		if (workItems.size() == 0) {
			return null;
		}
		if (workItems.size() ==1) {
			WorkItem result = workItems.get(0);
			this.workItems.clear();
			return result;
		} else {
			throw new IllegalArgumentException("More than one work item active");
		}
	}

	public List<WorkItem> getWorkItems() {
		List<WorkItem> result = new ArrayList<WorkItem>(workItems);
		workItems.clear();
		return result;
	}
}
