package org.openkoala.sample.mq.queue;

import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnectionFactory;

public class QueuePublisher {

	private static String brokerURL = "failover:(tcp://localhost:61616,tcp://localhost:61616)";
	private static transient ConnectionFactory factory;
	private transient Connection connection;
	private transient Session session;
	private transient MessageProducer producer;

	private static int count = 10;
	private static int total;
	private static int id = 1000000;

	public QueuePublisher() throws JMSException {
		factory = new ActiveMQConnectionFactory(brokerURL);
		connection = factory.createConnection("chencao", "password");
		connection.start();
		session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
		producer = session.createProducer(null);
	}

	public void close() throws JMSException {
		if (connection != null) {
			connection.close();
		}
	}

	public static void main(String[] args) throws JMSException {
		QueuePublisher publisher = new QueuePublisher();
		while (total < 10) {
			for (int i = 0; i < count; i++) {
				publisher.sendMessage();
			}
			total += count;
			System.out.println("Published '" + count + "' of '" + total
					+ "' job messages");
			try {
				Thread.sleep(1000);
			} catch (InterruptedException x) {
			}
		}
		publisher.close();

	}

	public void sendMessage() throws JMSException {
		Destination destination = session.createQueue("QUEUE.chencao");
		Message message = session.createTextMessage("" + id++);
		System.out.println("Sending: id: " + ((TextMessage) message).getText()
				+ " on queue: " + destination);
		producer.send(destination, message);
	}

}
