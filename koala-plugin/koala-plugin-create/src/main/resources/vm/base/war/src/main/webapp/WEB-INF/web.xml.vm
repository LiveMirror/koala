<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<display-name>${Project.appName}-web</display-name>

    <!-- Spring Listener -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:META-INF/spring/root.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.dayatang.ioc.spring.webapp.DayatangContextLoaderListener</listener-class>
    </listener>
 #if ( $Module.securityOrg)
    <listener>
		<listener-class>org.openkoala.security.org.listener.SecurityOrgDBInitListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.openkoala.security.listener.SystemEvenmentListener</listener-class>
	</listener>
 #end   
#if ($Module.security)
	<listener>
		<listener-class>org.openkoala.security.listener.SecurityDBInitListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.openkoala.security.listener.SystemEvenmentListener</listener-class>
	</listener>
#end
<!--组织子系统的listener-->
#if ($Module.organization || $Module.securityOrg)
	<listener>
		<listener-class>org.openkoala.organisation.web.context.OrganisationListener</listener-class>
	</listener>
#end

	#if ($Module.monitor)
	<!-- monitor config begin-->
     <listener>
		<listener-class>org.openkoala.koala.monitor.core.KoalaMonitorListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>monitor-config</param-name>
		<param-value>/WEB-INF/monitor/koala-monitor.xml</param-value>
	</context-param>

	<filter>
		<filter-name>PageDetectFilter</filter-name>
		<filter-class>org.openkoala.koala.monitor.component.http.DetectFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>PageDetectFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
   <!-- monitor config end -->
#end

	<!-- Character Filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	   #if ($Module.security || $Module.securityOrg)
	<!-- shiro filter -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
	
	
	<!--token验证过滤器 -->
	<filter>
		<filter-name>koalaTokenValidateFilter</filter-name>
		<filter-class>org.openkoala.koala.token.web.KoalaTokenValidateFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>koalaTokenValidateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--token生成器 -->
	<servlet>
		<servlet-name>tokenGenerate</servlet-name>
		<servlet-class>org.openkoala.koala.token.web.KoalaTokenGenerateServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>tokenGenerate</servlet-name>
		<url-pattern>/koala.token</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>jcaptcha</servlet-name>
		<servlet-class>com.octo.captcha.module.servlet.image.SimpleImageCaptchaServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>jcaptcha</servlet-name>
		<url-pattern>/jcaptcha.jpg</url-pattern>
	</servlet-mapping>
	
   #end
	<session-config>
		<session-timeout>120</session-timeout>
	</session-config>

   #if ($Project.mvcProtocol == "Struts2MVC")
	<!-- 加入struts2的支持 -->
	<filter>
		<filter-name>action2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>action2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    #end
    
    #if($Project.mvcProtocol == "SpringMVC" || $Module.security || $Module.securityOrg|| $Module.monitor || $Module.generalQuery)
    	<!-- 加入SpringMVC -->
	 <servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:koala-spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
  
	  <servlet-mapping>
	  	<servlet-name>spring</servlet-name>
	  	<url-pattern>*.koala</url-pattern>
	  </servlet-mapping>
    #end
    
#if ($Module.security)

	<error-page>
		<error-code>405</error-code>
		<location>/pages/errors/405.jsp</location>
	</error-page>
	<error-page>
		<error-code>302</error-code>
		<location>/pages/errors/302.jsp</location>
	</error-page>
 #end
 
 #if ($Module.businessLog)
     <filter>
        <filter-name>LogFilter</filter-name>
        <filter-class>${Module.basePackage}.businesslog.LogFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>LogFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
#end

	<error-page>
		<error-code>404</error-code>
		<location>/pages/errors/404.html</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/pages/errors/500.html</location>
	</error-page>
	
	<welcome-file-list>
#if ($Module.security || $Module.securityOrg)
		<welcome-file>/login.jsp</welcome-file>
#elesif ($Module.organization && !$Module.generalQuery && !$Module.security)
		<welcome-file>/pages/organisation/index.jsp</welcome-file>
#elesif ($Module.generalQuery && !$Module.organization &&  !$Module.security)
		<welcome-file>/pages/gqc/index.jsp</welcome-file>
#eles
		<welcome-file>/pages/index.jsp</welcome-file>
#end
	</welcome-file-list>

	<jsp-config>
		<taglib>
			<taglib-uri>http://www.openkoala.com/token</taglib-uri>
			<taglib-location>/WEB-INF/token.tld</taglib-location>
		</taglib>
	</jsp-config>

	<distributable />
</web-app>
