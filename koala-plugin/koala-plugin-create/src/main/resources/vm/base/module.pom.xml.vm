<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>$Project.groupId</groupId>
	    <artifactId>$Project.artifactId</artifactId>
	    <version>$Project.version</version>
	</parent>
	<artifactId>${Module.moduleName}</artifactId>
	<name>${Module.moduleName}</name>
	#if ($Module.moduleType=="war")
	<packaging>war</packaging>
	#end
	#if ($Module.moduleType!="war")
	<packaging>jar</packaging>
	#end
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.type>$Module.moduleType</project.type>
		<base.package>$Module.basePackage</base.package>
	</properties>
	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		 <dependency>
			<groupId>org.openkoala.koalacommons</groupId>
			<artifactId>koala-commons-test-support</artifactId>
			<version>${koala.version}</version>
			<scope>test</scope>
		</dependency>
		
  #foreach ($_moduleName in $Module.dependencies )
    #foreach ( $_Module in $Project.module)
      #if ($_moduleName == $_Module.moduleName)
        <dependency>
		  <groupId>$Project.groupId</groupId>
	      <artifactId>$_moduleName</artifactId>
 	      <version>${project.parent.version}</version>
		</dependency>
      #end
    #end
  #end

  
        #if ($Module.moduleType == "bizModel")
		<!-- 加入对DOMAIN层的依赖 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-domain</artifactId>
		</dependency>
		
        <dependency> 
            <groupId>org.openkoala.koalacommons</groupId>  
            <artifactId>koala-commons-domain</artifactId>  
        </dependency>  
  <!-- 加入CONF依赖 -->
  <dependency>
  	<groupId>$Project.groupId</groupId>
	<artifactId>${Project.appName}-conf</artifactId>
	<version>${project.parent.version}</version>
	<type>test-jar</type>
    <scope>test</scope>
  </dependency>
       #end
 
  #if ($Module.moduleType == "applicationInterface")
  	     <dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-query-channel</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.openkoala.koalacommons</groupId>
			<artifactId>koala-commons-exception</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openkoala.koalacommons</groupId>
			<artifactId>koala-commons-support</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>		
  #end
       
 #if ($Module.moduleType == "applicationInterface")
 	
   <dependency>
  	<groupId>$Project.groupId</groupId>
	<artifactId>${Project.appName}-conf</artifactId>
	<version>${project.parent.version}</version>
	<type>test-jar</type>
    <scope>test</scope>
  </dependency>
  
        <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>

		<!-- 加入对查询通道的依赖 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-query-channel</artifactId>
		</dependency>
		
		

		<!-- 加入对dayatang的DB的支持 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-db</artifactId>
		</dependency>

		<!-- 加入对dayatang的spring的实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-ioc-spring</artifactId>
		</dependency>

		<!-- 加入对dayatang的hibernate的实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-persistence-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool</artifactId>
		</dependency>
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool-cglib</artifactId>
		</dependency>

		<!-- 加入对测试的支持包 -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 加入Spring对JPA的支持 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-persistence-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		
#end

 #if ($Module.moduleType == "application")
		<!-- 加入Spring对JPA的支持 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.openkoala.koalacommons</groupId>
	        <artifactId>koala-commons-support</artifactId>
	    </dependency>
#end

 #if ($Module.moduleType == "facade")
  	     <dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-query-channel</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.openkoala.koalacommons</groupId>
			<artifactId>koala-commons-exception</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openkoala.koalacommons</groupId>
			<artifactId>koala-commons-support</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>		
  #end

#if ($Module.moduleType == "facadeImpl")
 	
   <dependency>
  	<groupId>$Project.groupId</groupId>
	<artifactId>${Project.appName}-conf</artifactId>
	<version>${project.parent.version}</version>
	<type>test-jar</type>
    <scope>test</scope>
  </dependency>
  
        <dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>

		<!-- 加入对查询通道的依赖 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-query-channel</artifactId>
		</dependency>
		
		

		<!-- 加入对dayatang的DB的支持 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-db</artifactId>
		</dependency>

		<!-- 加入对dayatang的spring的实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-ioc-spring</artifactId>
		</dependency>

		<!-- 加入对dayatang的hibernate的实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-persistence-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool</artifactId>
		</dependency>
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool-cglib</artifactId>
		</dependency>

		<!-- 加入对测试的支持包 -->
		<dependency>
			<groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 加入Spring对JPA的支持 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-persistence-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		
#end

 #if ($Module.moduleType == "facadeImpl")
		<!-- 加入Spring对JPA的支持 -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.openkoala.koalacommons</groupId>
	        <artifactId>koala-commons-support</artifactId>
	    </dependency>
#end



#if ($Module.moduleType == "war")

   <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
   </dependency>     
	<dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2</version>
    </dependency>
  <dependency>
  	<groupId>$Project.groupId</groupId>
	<artifactId>${Project.appName}-conf</artifactId>
	<version>$Project.version</version>
  </dependency>
  
  <!-- 加入对dayatang的spring的实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-ioc-spring</artifactId>
		</dependency>

         <dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>

		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
	<dependency> 
		<groupId>org.openkoala.security</groupId> 
		<artifactId>koala-security-core</artifactId> 
	</dependency>
	
	<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
    </dependency>
		
		
#end

#if ($Module.moduleType == "war")
   #if($Project.mvcProtocol=="Struts2MVC")
    <!-- 加入Struts2 MVC的支持 -->
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-spring-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-json-plugin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.struts</groupId>
			<artifactId>struts2-convention-plugin</artifactId>
		</dependency>
   #end
   
   #if($Project.mvcProtocol=="SpringMVC" || $Module.security || $Module.monitor || $Module.generalQuery)
      <dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-webmvc</artifactId>
	  </dependency>
   #end
   
#end

#foreach ($function in $Module.functions)
	#if ($function == "struts2")
		
	#end
	
	#if ($function == "cache")
		<!-- 加入对dayatang的缓存实现 -->
		<dependency>
	    	<groupId>org.dayatang.dddlib</groupId>
	    	<artifactId>dddlib-cache-memcached</artifactId>
    	</dependency>
    	<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
	#end
	
	#if($function == "i18n")
		<!-- 加入对dayatang的i18n实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-i18n</artifactId>
		</dependency>
	#end
	
	#if ($function == "excel")
		<!-- 加入对dayatang的excel实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-excel</artifactId>
		</dependency>
	#end
	
	#if ($function == "rule")
		<!-- 加入对dayatang的rule实现 -->
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-rule</artifactId>
		</dependency>
			<dependency>
			<groupId>jsr94</groupId>
			<artifactId>jsr94</artifactId>
		</dependency>
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-jsr94</artifactId>
		</dependency>
	#end
	
	#if ($function == "springMVC")
		<!-- 加入SpringMVC -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
	#end
	
	#if($function == "jsf")
		<!-- 加入JSF -->
		<dependency>
			<groupId>com.sun.faces</groupId>
			<artifactId>jsf-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<scope>provided</scope>
		</dependency>
	#end
	
	#if($function == "ftp")
		<!-- 加入ftp -->
		<dependency>
			<groupId>org.openkoala.koalacommons</groupId>
			<artifactId>koala-commons-ftp</artifactId>
		</dependency>
	#end
	
	#if ($function == "ejb")
		 <!-- 加入EJB的支持 -->
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
		</dependency>
	#end
	
	#if ($function == "org.openkoala.businesslog.utils")
		<dependency>
			<groupId>org.dayatang.dddlib</groupId>
			<artifactId>dddlib-utils</artifactId>
		</dependency>
	#end
	
	#if ($function == "process")
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
		</dependency>
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>
		
        <dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-compiler</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-core</artifactId>
		</dependency>
	
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-api</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.jbpm</groupId>
		    <artifactId>jbpm-flow</artifactId>
	    </dependency>
		<dependency>
		    <groupId>org.jbpm</groupId>
		    <artifactId>jbpm-bpmn2</artifactId>
	    </dependency>
	    <dependency>
		    <groupId>org.jbpm</groupId>
		    <artifactId>jbpm-flow-builder</artifactId>
	    </dependency>
		
		<dependency>
	        <groupId>commons-collections</groupId> 
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			  <groupId>commons-logging</groupId>
			  <artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
	        <groupId>dom4j</groupId> 
			<artifactId>dom4j</artifactId>
		</dependency>
		<dependency>
	        <groupId>javassist</groupId> 
			<artifactId>javassist</artifactId>
		</dependency>
	#end
	
	#if ($function == "job")
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<!-- scope>provided</scope -->
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool</artifactId>
		</dependency>
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool-cglib</artifactId>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>

		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jboss</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
	#end
	
	#if ($function == "activeMQ")
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<!-- scope>provided</scope -->
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool</artifactId>
		</dependency>
		<dependency>
			<groupId>proxool</groupId>
			<artifactId>proxool-cglib</artifactId>
		</dependency>
		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.xbean</groupId>
			<artifactId>xbean-spring</artifactId>
		</dependency>
	#end
#end

	</dependencies>
	
	<build>
	
		<plugins>
		   #if ($Module.moduleType == "war")
			<!-- 配置加入jetty服务器，开发时我们一般使用jetty服务器 -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<!-- 设置扫描target/classes内部文件变化时间间隔 -->
					<!--<scanIntervalSeconds>10</scanIntervalSeconds>-->
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
				</configuration>
			</plugin>
			#end
			#foreach($function in $Module.functions)
			#if ($function == "excel")
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>xls</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
			#end
			#end
		</plugins>
	</build>
</project>
