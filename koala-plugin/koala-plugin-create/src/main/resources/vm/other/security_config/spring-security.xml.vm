<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<!-- 设置登录页面为login.jsp且不拦截页面login.jsp后面的*防止带了参数 -->
	<s:http auto-config="true" access-denied-page="/denied.jsp">
		<s:form-login login-page="/login.action" default-target-url="/index.action"
			authentication-failure-url="/login.action?login_error=1" />
		<s:intercept-url pattern="/login.action*" filters="none" />
		<s:intercept-url pattern="/denied.action*" filters="none" />
		<s:intercept-url pattern="/index.action*" filters="none" />
		<s:intercept-url pattern="/welcome.action*" filters="none" />
		<s:intercept-url pattern="/login.jsp*" filters="none" />
		<s:intercept-url pattern="/*.ico" filters="none" />
		<s:intercept-url pattern="/" filters="none" />
		<s:logout invalidate-session="true" logout-url="/j_spring_security_logout" logout-success-url="/login.action"/>
		<s:intercept-url pattern="/lib/**" filters="none" />  
		<s:intercept-url pattern="/common/**" filters="none" />

		<!--  <s:session-management session-fixation-protection="none">
			<concurrency-control />
		</s:session-management>  -->
		
		<s:session-management invalid-session-url="/login.action">  
            <s:concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />  
        </s:session-management>  
		

		<!-- 自定义过滤器 -->
		<s:custom-filter ref="customFilter" before="FILTER_SECURITY_INTERCEPTOR" />
	</s:http>


	<bean id="user_cache"
		class="org.openkoala.framework.cache.EhCacheImpl">
		<constructor-arg index="0"><value>user_cache</value></constructor-arg>
		<constructor-arg index="1"><value>10000</value></constructor-arg>
		<constructor-arg index="2"><value>1</value></constructor-arg>
		<constructor-arg index="3"><value>0</value></constructor-arg>
		<constructor-arg index="4"><value>1200000</value></constructor-arg>
		<constructor-arg index="5"><value>20000</value></constructor-arg>
	</bean>
	<bean id="resource_cache"
		class="org.openkoala.framework.cache.EhCacheImpl">
		<constructor-arg index="0"><value>resource_cache</value></constructor-arg>
		<constructor-arg index="1"><value>10000</value></constructor-arg>
		<constructor-arg index="2"><value>1</value></constructor-arg>
		<constructor-arg index="3"><value>0</value></constructor-arg>
		<constructor-arg index="4"><value>1200000</value></constructor-arg>
		<constructor-arg index="5"><value>20000</value></constructor-arg>
	</bean>
<!--  	<bean id="user_cache" class="com.dayatang.cache.memcached.MemCachedBasedCache" >
		<property name="servers">
			<list>
				<value>10.108.1.62:11211</value>
			</list>
		</property>
		<property name="initConn" value="3"></property>
		<property name="minConn" value="3"></property>
		<property name="maxConn" value="5"></property>
	</bean>
	<bean id="resource_cache" class="com.dayatang.cache.memcached.MemCachedBasedCache" >
		<property name="servers">
			<list>
				<value>10.108.1.62:12301</value>
			</list>
		</property>
		<property name="initConn" value="3"></property>
		<property name="minConn" value="3"></property>
		<property name="maxConn" value="5"></property>
	</bean>-->
	
	<!--  -->
	<bean id="JdbcSecurityConfig" class="org.openkoala.koala.auth.impl.jdbc.JdbcSecurityConfig">
		<property name="queryUser"><value>${security.db.jdbc.queryUser}</value></property>
		<property name="queryAllUser"><value>${security.db.jdbc.queryAllUser}</value></property>
		<property name="queryAllAuth"><value>${security.db.jdbc.queryAllAuth}</value></property>
		<property name="queryUserAuth"><value>${security.db.jdbc.queryUserAuth}</value></property>
		<property name="queryResAuth"><value>${security.db.jdbc.queryResAuth}</value></property>
		<property name="queryAllRes"><value>${security.db.jdbc.queryAllRes}</value></property>
		<property name="dbdriver"><value>${security.db.jdbc.driver}</value></property>
		<property name="dburl"><value>${security.db.jdbc.connection.url}</value></property>
		<property name="dbuser"><value>${security.db.jdbc.username}</value></property>
		<property name="dbpassword"><value>${security.db.jdbc.password}</value></property>
		<property name="dbhost"><value>${security.db.host}</value></property>
		<property name="dbtype"><value>${security.db.type}</value></property>
		<property name="dbname"><value>${security.db.name}</value></property>
		<property name="useAdmain"><value>${security.db.jdbc.useAdmin}</value></property>
		<property name="adminAccount"><value>${security.db.jdbc.adminAccount}</value></property>
		<property name="adminPass"><value>${security.db.jdbc.adminPass}</value></property>
		<property name="adminRealName"><value>${security.db.jdbc.adminRealName}</value></property>
		<property name="queryPrivilege"><value>${security.db.jdbc.queryPrivilege}</value></property>
	</bean>
	
	
	<bean id="authDataService" class ="org.openkoala.koala.auth.impl.jdbc.JDBCAuthDataService">
		<property name="config" ref="JdbcSecurityConfig"></property>
	</bean>
	
	
	<bean id="securityMetadataSource"
		class="org.openkoala.koala.auth.ss3adapter.SecurityMetadataSource">
		<property name="provider" ref="authDataService"></property>
	</bean>
		
	<bean id="userDetailManager" class="org.openkoala.koala.auth.ss3adapter.UserDetailManager">
		<property name="provider" ref="authDataService"></property>
	</bean>

	<bean id="accessDecisionManager" class="org.openkoala.koala.auth.ss3adapter.AccessDecisionManager"/>

	<bean id="customFilter" class="org.openkoala.koala.auth.ss3adapter.CustomFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>

	<!-- 认证md5加密密码(原密码加盐值进行加密) -->
	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider user-service-ref="userDetailManager">
			<s:password-encoder hash="md5">
				<s:salt-source user-property="username" />
			</s:password-encoder>
		</s:authentication-provider>
	</s:authentication-manager>


</beans>