<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd"
	version="1.0">

	<named-query name="findAllRelaitionByResource">
		<query>
			select distinct m from IdentityResourceAuthorization m where
			m.resource.id=:resourceId
		</query>
	</named-query>
	
	<named-query name="findAuthorizationByRole">
		<query>
			select auth from IdentityResourceAuthorization auth join auth.identity role 
			where role.id=:roleId and auth.abolishDate>:abolishDate
		</query>
	</named-query>
	
	<named-query name="findAuthorizationByResourceIdentifier">
		<query>
			select auth.identity.id from IdentityResourceAuthorization auth 
			where auth.resource.identifier=:identifier and auth.abolishDate>:abolishDate
		</query>
	</named-query>
	
	<named-query name="findAuthorizationsByResourceIds">
		<query>
			select auth.resource.identifier , auth.identity.id from IdentityResourceAuthorization auth 
			where auth.resource.id IN (:resourceIds) and auth.abolishDate>:abolishDate
		</query>
	</named-query>
	
	<named-query name="findAllResourceIdentifierAndRoleId">
		<query>
			select auth.identity.id ,auth.resource.identifier from IdentityResourceAuthorization auth 
			where auth.abolishDate>:abolishDate
		</query>
	</named-query>
	
</entity-mappings>
