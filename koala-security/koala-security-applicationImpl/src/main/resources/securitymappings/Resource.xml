<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://java.sun.com/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd"
	version="1.0">
	<named-query name="findRoleByResource">
		<query>
			select role from Role role join role.authorizations a
			where a.resource.identifier=?
		</query>
	</named-query>
	
	<named-query name="hasChildByParent">
		<query>
			select distinct m.id from 
			ResourceLineAssignment m where m.parent.id=?
		</query>
	</named-query>
	
	<named-query name="queryPrivilegeByRole">
		<query>
			select m from IdentityResourceAuthorization m where m.resource.id=? 
			and m.identity.id=? and m.abolishDate>?
		</query>
	</named-query>
	
	<named-query name="queryPrivilegeByUser">
		<query>
			select m from IdentityResourceAuthorization m,RoleUserAuthorization b  
			where m.resource.identifier=? and  m.identity.id = b.role.id 
			and b.user.userAccount=?
		</query>
	</named-query>
	
	<named-query name="findChildByParent">
		<query>
			select distinct child from ResourceLineAssignment m join m.parent parent 
			join m.child child where parent.id=? and m.abolishDate>? 
			order by child.sortOrder asc, child.createDate
		</query>
	</named-query>
	
	<named-query name="findTopLevelResource">
		<query>
			select distinct resource from ResourceTypeAssignment assignment 
			left join assignment.resource resource left join assignment.resourceType resourceType
			where resource.level=? and resource.abolishDate>? order by resource.sortOrder , resource.createDate
		</query>
	</named-query>
	
	<named-query name="findChildByParentAndUser">
		<query>
			select distinct m.child from ResourceLineAssignment m,IdentityResourceAuthorization a,
			RoleUserAuthorization b where m.parent.id=?
			and m.child.id=a.resource.id and a.identity.id=b.role.id and b.user.userAccount=?
			and a.abolishDate>? and b.abolishDate>?
		</query>
	</named-query>
	
	<named-query name="findTopLevelResourceByUser">
		<query>
			select distinct m from Resource m,
			IdentityResourceAuthorization a,RoleUserAuthorization b where
			m.id = a.resource.id and a.identity.id = b.role.id
			and b.user.userAccount=? and b.abolishDate>? and a.abolishDate>?
			and m.level=1 order by m.sortOrder asc
		</query>
	</named-query>
	
	<named-query name="findResourceByRole">
		<query>
			select distinct resource from IdentityResourceAuthorization auth 
			join auth.resource resource join auth.identity role where role.id=? and auth.abolishDate>?
		</query>
	</named-query>
	
	<named-query name="findResourceById">
		<query>
			select r from ResourceTypeAssignment rta join rta.resource r
			join rta.resourceType rt where (rt.name=? or rt.name=?) and r.id=?
		</query>
	</named-query>
	
	<named-query name="isResouceNameExist">
		<query>
			select resource from Resource resource where resource.name=?
			and resource.abolishDate>? 
		</query>
	</named-query>
	
	<named-query name="isResourceIdentifierExist">
		<query>
			select resource from Resource resource where resource.identifier=?
			and resource.abolishDate>?
		</query>
	</named-query>
	
	<named-query name="hasParent">
		<query>
			select assignment.child from ResourceLineAssignment assignment
			where assignment.abolishDate>?
		</query>
	</named-query>
	
</entity-mappings>
