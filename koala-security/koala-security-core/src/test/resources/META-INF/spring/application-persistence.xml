<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">


	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager_security" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory_security" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
		and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory_security"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath*:META-INF/spring/jpa.xml" />
		<property name="dataSource" ref="dataSource_security" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${security.generateDdl}"></property>
				<property name="showSql" value="${security.hibernate.show_sql}"></property>
				<property name="databasePlatform" value="${security.hibernate.dialect}"></property>
			</bean>
		</property>
	</bean>


	<bean id="dataSource_security" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${security.db.jdbc.driver}" />
		<property name="driverUrl" value="${security.db.jdbc.connection.url}" />
		<property name="user" value="${security.db.jdbc.username}" />
		<property name="password" value="${security.db.jdbc.password}" />
		<property name="prototypeCount" value="5" />
		<property name="maximumConnectionCount" value="200" />
		<property name="minimumConnectionCount" value="20" />
		<property name="alias" value="security" />
	</bean>



	<bean id="repository_ss" class="org.dayatang.persistence.jpa.EntityRepositoryJpa">
		<constructor-arg name="entityManagerFactory" ref="entityManagerFactory_security" />
	</bean>

	<bean id="queryChannel_ss" class="org.dayatang.querychannel.impl.QueryChannelServiceImpl">
		<constructor-arg name="repository" ref="repository_ss" />
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager_security" />

	<!-- security datasource 的配置 结束 -->
</beans>