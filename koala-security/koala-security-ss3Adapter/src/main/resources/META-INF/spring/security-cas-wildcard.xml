<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <!-- CAS权限支持通配符的实现，如果不需要支持通配符，请使用spring-cas -->
	<s:http auto-config="false" entry-point-ref="casAuthenticationEntryPoint" use-expressions="true">
		<s:intercept-url pattern="/**" access="!anonymous" />
		<s:custom-filter position="CAS_FILTER" ref="casAuthenticationFilter" />
		<s:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />
		<s:custom-filter before="LOGOUT_FILTER" ref="requestSingleLogoutFilter" />
	</s:http>
	
	<!-- 退出登录 -->
	<bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="${logoutSuccessUrl}" />
		<constructor-arg>
			<bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</constructor-arg>
		<property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
	</bean>

	<bean id="casAuthenticationEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<property name="loginUrl" value="${loginUrl}" />
		<property name="serviceProperties" ref="serviceProperties" />
	</bean>

	<bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<property name="service" value="${serviceUrl}" />
		<property name="sendRenew" value="false" />
	</bean>

	<bean id="casAuthenticationFilter"
		class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>

	<s:authentication-manager alias="authenticationManager">
		<s:authentication-provider ref="casAuthenticationProvider" />
	</s:authentication-manager>

	<bean id="casAuthenticationUserDetailsService"
		class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
		<property name="userDetailsService">
			<ref local="userDetailManager" />
		</property>
	</bean> 

	<bean id="casAuthenticationProvider"
		class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<property name="authenticationUserDetailsService" ref="casAuthenticationUserDetailsService" />
		<property name="serviceProperties" ref="serviceProperties" />
		<property name="ticketValidator">
			<bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<constructor-arg index="0" value="${casServerUrlPrefix}" />
			</bean>
		</property>
		<property name="key" value="cas" />
	</bean>
	
	<bean id="securityMetadataSource"
		class="org.openkoala.koala.auth.ss3adapter.WildcardSecurityMetadataSource">
		<property name="provider" ref="authDataService" />
	</bean>
		
	<bean id="userDetailManager" class="org.openkoala.koala.auth.ss3adapter.UserDetailManager">
		<property name="provider" ref="authDataService" />
	</bean>

	<bean id="accessDecisionManager" class="org.openkoala.koala.auth.ss3adapter.AccessDecisionManager"/>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性。 -->
	<bean id="securityFilter" class="org.openkoala.koala.auth.ss3adapter.SecurityFilter">
		<!-- 登陆的认证 -->
		<property name="authenticationManager" ref="authenticationManager" /> 
		<!-- 资源访问决策 -->
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<!-- 资源和权限列表 -->
		<property name="securityMetadataSource" ref="securityMetadataSource" />
	</bean>

</beans>
